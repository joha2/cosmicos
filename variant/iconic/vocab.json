{
  "vocab": [
    {
      "title": "<",
      "text": "<"
    },
    {
      "title": ">",
      "text": ">"
    },
    {
      "title": "*",
      "text": "*"
    },
    {
      "title": "+",
      "text": "+"
    },
    {
      "title": "-",
      "text": "-"
    },
    {
      "title": "0",
      "text": "0"
    },
    {
      "title": "1",
      "text": "1"
    },
    {
      "title": "=",
      "text": "="
    },
    {
      "title": "?",
      "text": "&#955;"
    },
    {
      "title": "is",
      "text": "&#9728;"
    },
    {
      "title": "not",
      "text": "&#9851;"
    },
    {
      "title": "x",
      "text": "&#5771;"
    },
    {
      "title": "y",
      "text": "&#5772;"
    },
    {
      "title": "z",
      "text": "&#5773;"
    },
    {
      "title": "n",
      "text": "&#x1686;"
    },
    {
      "title": "int",
      "text": "&#8258;"
    },
    {
      "title": "unary",
      "text": "&#9856;"
    },
    {
      "title": "prime",
      "text": "&#0632;"
    },
    {
      "title": "square",
      "text": "&#9633;"
    },
    {
      "title": "intro",
      "text": "&#9776;"
    },
    {
      "title": "assign",
      "text": "&#9993;"
    },
    {
      "title": "?-SKIP",
      "text": "&#9992;"
    },
    {
      "title": "define",
      "alias": "assign:assign"
    },
    {
      "title": "meaning-of-life-universe-everything",
      "text": "&#10052;"
    },
    {
      "title": "false",
      "text": "&#9178;&#xFE0E;"
    },
    {
      "title": "true",
      "text": "&#9786;&#xFE0E;"
    },
    {
      "title": "begin",
      "text": "&#8712;"
    },
    {
      "title": "end",
      "text": "&#8715;"
    },
    {
      "title": "remainder",
      "text": "&#9655;"
    },
    {
      "title": "make-cell",
      "text": "&#9734;"
    },
    {
      "title": "emerge",
      "text": "&#8738;"
    },
    {
      "title": "demo",
      "text": "&#8984;"
    },
    {
      "title": "if",
      "alias": "true:false"
    },
    {
      "title": "max",
      "alias": ">:>"
    },
    {
      "title": "min",
      "alias": "<:<"
    },
    {
      "title": "factorial",
      "alias": "*:<"
    },
    {
      "title": "and",
      "alias": "true:*"
    },
    {
      "title": "or",
      "alias": "true:+"
    },
    {
      "title": ">=",
      "alias": ">:="
    },
    {
      "title": "<=",
      "alias": "<:="
    },
    {
      "title": "cons",
      "text": "&#8225;"
    },
    {
      "title": "car",
      "alias": "cons:begin"
    },
    {
      "title": "cdr",
      "alias": "cons:end"
    },
    {
      "title": "set!",
      "alias": "make-cell:assign"
    },
    {
      "title": "get!",
      "alias": "make-cell:emerge"
    },
    {
      "title": "get",
      "alias": "emerge"
    },
    {
      "title": "list",
      "alias": "cons:cons"
    },
    {
      "title": "pair",
      "alias": "cons:2"
    },
    {
      "title": "ret",
      "text": "&#8635;"
    },
    {
      "title": "undefined",
      "text": "&#216;"
    },
    {
      "title": "head",
      "alias": "list:begin"
    },
    {
      "title": "tail",
      "alias": "list:remainder"
    },
    {
      "title": "list-length",
      "alias": "list:int"
    },
    {
      "title": "list-ref",
      "alias": "list:emerge"
    },
    {
      "title": "function",
      "alias": "?"
    },
    {
      "title": "function?",
      "alias": "is:function"
    },
    {
      "title": "equal",
      "alias": "=:="
    },
    {
      "title": "list=",
      "alias": "list:="
    },
    {
      "title": "prepend",
      "alias": "list:begin:+"
    },
    {
      "title": "first",
      "alias": "list-ref:0"
    },
    {
      "title": "second",
      "alias": "list-ref:1"
    },
    {
      "title": "map",
      "alias": "list:?"
    },
    {
      "title": "reduce",
      "alias": "list:?:1"
    },
    {
      "title": "minus",
      "alias": "-:0"
    },
    {
      "title": "frac",
      "text": "/"
    },
    {
      "title": "abs",
      "alias": "+:+"
    },
    {
      "title": "in",
      "text": "&#9179;"
    },
    {
      "title": "epsilon",
      "text": "&#603;"
    },
    {
      "title": "within",
      "alias": "in:epsilon"
    },
    {
      "title": "range",
      "alias": "in:int:list"
    },
    {
      "title": "even",
      "alias": "*:int:2"
    },
    {
      "title": "odd",
      "alias": "+:1:*:int:2"
    },
    {
      "title": "decimal",
      "alias": "frac:10"
    },
    {
      "title": "10",
      "text": "10"
    },
    {
      "title": "float",
      "alias": "+:frac"
    },
    {
      "title": "e",
      "text": "e"
    },
    {
      "title": "pi",
      "text": "&#960;"
    },
    {
      "title": "hat",
      "text": "&#8776;"
    },
    {
      "title": "part",
      "text": "&#8747;"
    },
    {
      "title": "translate",
      "alias": "assign:function"
    },
    {
      "title": "vector",
      "text": "&#8858;"
    },
    {
      "title": "find",
      "text": "&#8240;"
    },
    {
      "title": "last",
      "alias": "list-ref:end"
    },
    {
      "title": "except-last",
      "alias": "list:not:end"
    },
    {
      "title": "all",
      "text": "&#8499;"
    },
    {
      "title": "all-equal",
      "alias": "=:all"
    },
    {
      "title": "sum",
      "alias": "reduce:+"
    },
    {
      "title": "i",
      "text": "i"
    },
    {
      "title": "complex",
      "alias": "i:contained"
    },
    {
      "title": "contained",
      "text": "&#2144;"
    },
    {
      "title": "let",
      "alias": "assign:list"
    },
    {
      "title": "lambda",
      "alias": "function:let"
    },
    {
      "title": "pure",
      "text": "&#8905;"
    },
    {
      "title": "next",
      "text": "&#8724;"
    },
    {
      "title": "prev",
      "text": "&#8723;"
    },
    {
      "title": "fixed-point",
      "alias": "function:function:function:function"
    },
    {
      "title": "forall",
      "text": "&#8704;"
    },
    {
      "title": "exists",
      "text": "&#8707;"
    },
    {
      "title": "element",
      "alias": "list:in"
    },
    {
      "title": "set",
      "text": "&#936;"
    }
  ]
}
